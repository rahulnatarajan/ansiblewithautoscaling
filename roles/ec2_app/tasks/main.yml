---
- name: Provision EC2_APP instances - zone 1
  local_action:
        module: ec2
        state: present
        id: "{{ aws_region }}.{{ aws_instanceType_app }}.{{ id_az_app1 }}"
        region: "{{ aws_region }}"
        keypair: "{{ aws_keypair }}"
        group:  "{{ security_group }}"
        instance_type: "{{ aws_instanceType_app }}"
        image: "{{ aws_image }}"
        count: "{{ count_app }}"
        vpc_subnet_id: "{{ vpc.subnets[0].id }}"
        assign_public_ip: True
        wait: yes
        volumes:
           - device_name: /dev/sda1
             device_type: "{{ device_type_app }}"
             volume_size: "{{ volume_size_app }}"
  register: ec2_instances_zone1


- name: Add EC2_APP zone1 instances to local host group
  local_action: 'lineinfile dest=aws_hosts regexp="{{ item.public_ip }}" insertafter="#app" line="{{ item.public_ip }}"'
  with_items: ec2_instances_zone1.instances

- name: Add EC2_APP zone1 instances to local host group
  local_action: shell echo instance_id":" "{{ item.id }}"
                      >> aws_vars/"{{ env }}"/vpc_info.yml
  with_items: ec2_instances_zone1.instances


- name: Add EC2_APP zone1 instances to host group
  local_action: add_host hostname="{{ item.public_ip }}" groupname=appservers
  with_items: ec2_instances_zone1.instances



- name: Wait for SSH to come up
  local_action: wait_for 
                host={{ item.public_ip }}
                port=22 
                delay=15 
                timeout=320 
                state=started
  with_items: ec2_instances_zone1.instances



- name: tag my launched instances
  ec2_tag: resource={{ item.id }} region="{{ aws_region }}" state=present
  with_items: ec2_instances_zone1.instances
  args:
    tags:
      Name: GOLD_AMI_instance

